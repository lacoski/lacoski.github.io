<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on Hacking Management</title>
    <link>https://lacoski.github.io/topics/vim/</link>
    <description>Recent content in Vim on Hacking Management</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2008 - 2018, Steve Francia; all rights reserved.</copyright>
    <lastBuildDate>Fri, 17 Jan 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://lacoski.github.io/topics/vim/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why I use spf13-vim</title>
      <link>https://lacoski.github.io/post/why-i-use-spf13-vim/</link>
      <pubDate>Fri, 17 Jan 2014 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/why-i-use-spf13-vim/</guid>
      <description>spf13-vim, a completely cross platform distribution of vim plugins and resources for Vim, GVim and MacVim stays true to it&amp;rsquo;s vim roots while adding modern features including a plugin management system, a curated plugin set with customized configuration, advanced autocomplete, tags, support for dozens of languages and much more.
I recently read a thread where the author asked for feedback on whether or not to use spf13-vim. Responses varied greatly with some people loving it to others claiming it was bloated and overkill.</description>
    </item>
    
    <item>
      <title>spf13-vim : Steve Francia&#39;s Vim Distribution</title>
      <link>https://lacoski.github.io/project/spf13-vim/</link>
      <pubDate>Tue, 10 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/project/spf13-vim/</guid>
      <description>spf13-vim is a distribution of vim plugins and resources for Vim, Gvim and MacVim.
It is a good starting point for anyone intending to use VIM for development running equally well on Windows, Linux, *nix and Mac.
The distribution is completely customisable using a ~/.vimrc.local and ~/.vimrc.bundles.local Vim RC files.
Unlike traditional VIM plugin structure, which similar to UNIX throws all files into common directories, making updating or disabling plugins a real mess, spf13-vim 3 uses the Vundle plugin management system to have a well organized vim directory (Similar to mac&amp;rsquo;s app folders).</description>
    </item>
    
    <item>
      <title>spf13-vim 3.0 release and new website</title>
      <link>https://lacoski.github.io/post/spf13-vim-3-0-release-and-new-website/</link>
      <pubDate>Fri, 06 Apr 2012 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/spf13-vim-3-0-release-and-new-website/</guid>
      <description>This post is a bit behind the actual releases, but should be announced here nevertheless. Announcing the 3rd major release of spf13-vim. spf13-vim is a distribution of vim plugins and resources for Vim, GVim and MacVim. It is a completely cross platform distribution that stays true to the feel of vim while providing modern features like a plugin management system, autocomplete, tags and tons more. It grew out of my vim configuration which I put on GitHub.</description>
    </item>
    
    <item>
      <title>PIV : PHP Integration for VIM</title>
      <link>https://lacoski.github.io/project/piv/</link>
      <pubDate>Mon, 13 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/project/piv/</guid>
      <description>This project contains the most feature complete and up to date PHP Integration for Vim. It began as a fork of the largely outdated VIP (formerly PDV), but has morphed into it’s own project.
It is intended to include the best PHP specific plugins, configurations and resources for editing PHP. Special care has been taken to include the best, keep them up to date and make sure everything plays well together.</description>
    </item>
    
    <item>
      <title>Announcing Projects &amp; Presentations</title>
      <link>https://lacoski.github.io/post/announcing-projects-presentations/</link>
      <pubDate>Fri, 22 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/announcing-projects-presentations/</guid>
      <description>I’ve decided to expand the scope of this site a bit to be more than just a blog. It makes sense, many of my posts are how tos and often for my own projects. Additionally now each project will have a legitimate project “homepage” for things like GitHub where that’s requested.
So without further ado… Please checkout my Projects and Presentations sections of my website spf13.com.
For now most of the projects are centered around VIM and PHP and the Presentations around Ecommerce and MongoDB.</description>
    </item>
    
    <item>
      <title>The perfect .vimrc vim config file</title>
      <link>https://lacoski.github.io/post/perfect-vimrc-vim-config-file/</link>
      <pubDate>Thu, 27 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/perfect-vimrc-vim-config-file/</guid>
      <description>I have spent the last few years tweaking and refining my VIM configuration. This is the ultimate VIM configuration .vimrc file. It is well organized and documented. It is on GitHub so you can always grab the latest. It works well alone, but is intended to be paired with the plugins and configuration found in my complete .vim configuration also hosted on GitHub.
The Perfect .vimrc file Last updated May 26th 2011</description>
    </item>
    
    <item>
      <title>Ultimate Vim Config</title>
      <link>https://lacoski.github.io/post/ultimate-vim-config/</link>
      <pubDate>Fri, 25 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/ultimate-vim-config/</guid>
      <description>I have spent the last few years tweaking and refining my VIM configuration until I had the Ultimate Vim Config. It is well organized and documented taking full advantage of Tpope’s pathogen for a excellent clean and modular configuration. The Ultimate vim config contains the perfect .vimrc file combined with an excellent set of plugins all easily managed thanks to pathogen and git. It is on GitHub so you can always grab the latest.</description>
    </item>
    
    <item>
      <title>VIM Crash Course</title>
      <link>https://lacoski.github.io/post/vim-crash-course/</link>
      <pubDate>Wed, 03 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/vim-crash-course/</guid>
      <description>Most developers know the basics of VIM, enough to edit a conf file, but most stay there, unaware of the power and beauty of vim. One of my developers has expressed desire to abandon the bloated GUI ways of eclipse and discover VIM. I have been using VIM for such a long time I forgot how difficult that transition is. Here are some resources and approaches to help you learn vim.</description>
    </item>
    
    <item>
      <title>Vim Plugins: snipMate</title>
      <link>https://lacoski.github.io/post/vim-plugins-snipmate/</link>
      <pubDate>Sat, 12 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/vim-plugins-snipmate/</guid>
      <description>Why use it  It’s super easy to use It has tons of snippets It’s pretty well compatible with TextMate snippets for easy portability Dynamic variables, for all the times you use the same string multiple times It’s really easy to define your own snippets It’s better than anything else out there, trust me I’ve tried them all  Sometimes a video works better to explain things.. check out this video   snipMate.</description>
    </item>
    
    <item>
      <title>Vim Plugins: NERD Commenter</title>
      <link>https://lacoski.github.io/post/vim-plugins-nerd-commenter/</link>
      <pubDate>Mon, 09 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/vim-plugins-nerd-commenter/</guid>
      <description>The NERD Commenter is an indispensable tool when programming in VIM. It understands like a zillion different file types and properly comments each. It can handle single line, multi line, partial line commenting as well as nesting. If you’re programming in VIM you really should be using it.
It is simple enough to use. Most commands are mapped to ,c[character]. The command you are probably going to use the most is ,c&amp;lt;space&amp;gt; which intelligently toggles a comment on or off.</description>
    </item>
    
    <item>
      <title>The 15 Best Vim Plugins</title>
      <link>https://lacoski.github.io/post/the-15-best-vim-plugins/</link>
      <pubDate>Wed, 30 Jul 2008 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/the-15-best-vim-plugins/</guid>
      <description>One of the things that makes vim great is that it can be extended through plugins. There are plugins for more than you would expect. I have gathered together the 15 best plugins. I’ve included these plugins as part of my ultimate VIM configuration which has been featured on many sites and is hosted on github. I’ve also begun a series of posts on some of these plugins including snipmate and NerdCommenter.</description>
    </item>
    
  </channel>
</rss>