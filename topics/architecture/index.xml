<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Architecture on Hacking Management</title>
    <link>https://lacoski.github.io/topics/architecture/</link>
    <description>Recent content in Architecture on Hacking Management</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2008 - 2018, Steve Francia; all rights reserved.</copyright>
    <lastBuildDate>Mon, 29 Oct 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://lacoski.github.io/topics/architecture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Not Just Hadoop: NoSQL in the Enterprise at Strata NYC 2012</title>
      <link>https://lacoski.github.io/presentation/big-data-for-the-rest-of-us-at-nyc-strata-2012/</link>
      <pubDate>Mon, 29 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/presentation/big-data-for-the-rest-of-us-at-nyc-strata-2012/</guid>
      <description>At the NYC Strata &amp;amp; Hadoop World conference I presented on ‘Not Just Hadoop: NoSQL in the Enterprise’. Robert Lancaster from Orbitz joined me on stage for the final presentation of the Bridge to Big Data track. Mark Madsen did a great job moderating the session and kept the energy high the entire day. Robert shared how Orbitz uses MongoDB with Apache Hadoop to provide real time rates. This is my second time presenting at Strata’s Big Data conference.</description>
    </item>
    
    <item>
      <title>Replication, Durability, and Disaster Recovery</title>
      <link>https://lacoski.github.io/presentation/replication-durability-and-disaster-recovery/</link>
      <pubDate>Mon, 25 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/presentation/replication-durability-and-disaster-recovery/</guid>
      <description>This session introduces the basic components of high availability before going into a deep dive on MongoDB replication. We’ll explore some of the advanced capabilities with MongoDB replication and best practices to ensure data durability and redundancy. We’ll also look at various deployment scenarios and disaster recovery configurations.
  Replication, Durability, and Disaster Recovery
View more presentations from Steve Francia</description>
    </item>
    
    <item>
      <title>Multi Data Center Strategies and MongoDB</title>
      <link>https://lacoski.github.io/presentation/multi-data-center-strategies/</link>
      <pubDate>Tue, 05 Jun 2012 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/presentation/multi-data-center-strategies/</guid>
      <description>Strategies for multi-data center deployment. Diving into the details of deploying of MongoDB across multiple data centers.
Covers the advantages of a multi data center deployment for read/write locality, the various deployment strategies, and disaster preparedness and recovery.
In addition, we’ll look at the MongoDB roadmap and planned enhancements around data center awareness.
This presentation was given at MongoNYC 2012. The animations didn’t survive the transformation to the web, so not all the meaning carries over perfectly.</description>
    </item>
    
    <item>
      <title>NoSQL databases and Managing Big Data</title>
      <link>https://lacoski.github.io/presentation/nosql-databases-and-managing-big-data/</link>
      <pubDate>Tue, 08 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/presentation/nosql-databases-and-managing-big-data/</guid>
      <description>I had the unique opportunity to present at the annual technology forum Insight Venture Partners holds for their portfolio companies. Over 100 CTOs gathered in NYC to hear from great presenters from companies like 10gen, Tumblr, Shutterstock and Buddy Media.
I’ve included a slightly longer version of the presentation given which includes a few slides that I cut out for brevity to fit in the allocated time while still allowing time for questions.</description>
    </item>
    
    <item>
      <title>MongoDB, Hadoop and Humongous Data</title>
      <link>https://lacoski.github.io/presentation/mongodb-hadoop-and-humongous-data/</link>
      <pubDate>Fri, 04 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/presentation/mongodb-hadoop-and-humongous-data/</guid>
      <description>Learn how to integrate MongoDB with Hadoop for large-scale distributed data processing. Using Hadoop’s MapReduce and Streaming you will learn how to do analytics and ETL on large datasets with the ability to load and save data against MongoDB. With support for Hadoop streaming support goes beyond the native Java enabling map reduce to be run in languages like Python and Ruby.
  MongoDB, Hadoop and Humongous Data
View more presentations from Steve Francia</description>
    </item>
    
    <item>
      <title>Backup, Replication and Disaster Recovery</title>
      <link>https://lacoski.github.io/post/backups-replication-and-disaster-recovery/</link>
      <pubDate>Wed, 11 Jan 2012 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/backups-replication-and-disaster-recovery/</guid>
      <description>One of the most common concerns people have is how to ensure that their application is safe, secure and available in the event of an emergency. Often I have found that people are mistakenly believe that they are protected when in fact they often have ignored potential scenarios.
The principles explained apply equally well in RDBMSs, MongoDB and other databases.
Potential scenarios to protect against  Drive failure Machine failure Switch failure Power circuit failure Data center failure Intrusion Fat fingers Programmer error  Raid To prevent drive failure use multiple drives in a single machine for high availability.</description>
    </item>
    
    <item>
      <title>Competition for the Cloud Heats Up</title>
      <link>https://lacoski.github.io/post/competition-for-the-cloud-heats-up/</link>
      <pubDate>Thu, 30 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/competition-for-the-cloud-heats-up/</guid>
      <description>karindalziel    Cloud no longer a single vendor game. For years cloud computing has been synonymous with Amazon whose Amazon Web Services really created and defined the space. In the past year other providers have matured and in some areas even surpassing Amazon.
In a conversation with Scott White, the VP of Sales from Rackspace, he related to me their approach on the cloud and how customers are utilizing their cloud offering.</description>
    </item>
    
    <item>
      <title>Augmenting RDBMS with NoSQL for e-commerce</title>
      <link>https://lacoski.github.io/presentation/augmenting-rdbms-with-nosql-for-e-commerce/</link>
      <pubDate>Sun, 10 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/presentation/augmenting-rdbms-with-nosql-for-e-commerce/</guid>
      <description>Justin Hileman and I gave a presentation on “Augmenting RDBMS with NoSQL for e-commerce” at the PgEast 2011 conference. This presentation is really the sequel (no pun intended) to my presentation, MongoDB &amp;amp; Ecommerce : A Perfect Combination. This presentation takes you through how we created a hybrid solution blending both sql and nosql to achieve an optimal solution.
Augmenting RDBMS with MongoDB for ecommerce   View more presentations from Steve Francia</description>
    </item>
    
    <item>
      <title>The Golden Hammer</title>
      <link>https://lacoski.github.io/post/the-golden-hammer/</link>
      <pubDate>Wed, 21 Apr 2010 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/the-golden-hammer/</guid>
      <description>kyle may    Every so often a “new” technology catches on. Right now it’s nosql databases. A couple years ago it was Ruby, before that it was java. Each arise because they propose a solution to an existing problem, or in other words a better way of doing something.. something, but not everything.
Unfortunately knowing when to use the technology requires actual experience with it, which never seems to catch up to the hype engine quickly enough, so consequently the technology transforms into a “golden hammer”.</description>
    </item>
    
    <item>
      <title>Unix Jobs Management</title>
      <link>https://lacoski.github.io/post/unix-jobs-management/</link>
      <pubDate>Tue, 02 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/unix-jobs-management/</guid>
      <description>Every self respecting linux, mac os X or *nix user should have a solid handle on managing jobs in unix. The following will explain how to run tasks in the background, bring tasks to the foreground, background already running tasks and keeping a task running while logged out.
Run a task in the background All you need to to is follow a command with the ‘&amp;amp;’ character. Pretty simple.</description>
    </item>
    
    <item>
      <title>Benchmarking Cloudfront (and S3)</title>
      <link>https://lacoski.github.io/post/benchmarking-cloudfront-and-s3/</link>
      <pubDate>Tue, 19 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/benchmarking-cloudfront-and-s3/</guid>
      <description>Amazon has done it again bringing another computing service to the masses. This time it’s the Content Delivery Network or CDN. Cloudfront is a direct competitor to other popular CDNs such as Akamai. While Akamai requires a fairly substantial amount of traffic to become a customer, Cloudfront doesn’t. It follows all of Amazons, pay for what you use mentality. This means that everyone can benefit from incorporating Cloudfront into their blog, site, store, etc.</description>
    </item>
    
    <item>
      <title>REST vs SOAP, the difference between soap and rest</title>
      <link>https://lacoski.github.io/post/soap-vs-rest/</link>
      <pubDate>Fri, 15 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/soap-vs-rest/</guid>
      <description>Someone asked me a question today “Why would anyone choose SOAP (Simple Object Access Protocol) instead of REST (Representational State Transfer)?” My response: “The general rule of thumb I’ve always heard is ‘Unless you have a definitive reason to use SOAP use REST’”. He asked “what’s one reason?” I thought about it for a minute and honestly answered that I haven’t ever come across a reason. My background is building great internet companies.</description>
    </item>
    
    <item>
      <title>Scaling Web Sites (LAMP) : Top Resources</title>
      <link>https://lacoski.github.io/post/scaling-web-sites-lamp-top-resources-2/</link>
      <pubDate>Wed, 15 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>https://lacoski.github.io/post/scaling-web-sites-lamp-top-resources-2/</guid>
      <description>Image via Wikipedia   Luckily it’s 2009 and there have been a bunch of successful websites that have had to deal with large scalability challenges. Many have been kind enough to share their knowledge with the world. Here is a list of the best books, articles, presentations and practices from the likes of Twitter, Facebook, Flickr and more.
Books Building Scalable Web Sites Building, scaling, and optimizing the next generation of web applications by Cal Henderson</description>
    </item>
    
  </channel>
</rss>